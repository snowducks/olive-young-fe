pipeline {
    agent any

    environment {
        // Docker 이미지 이름과 태그를 지정합니다.
        IMAGE_NAME = "my-react-app"
        IMAGE_TAG  = "latest"
    }

    stages {
        stage('Checkout') {
            steps {
                // SCM에서 소스를 가져옵니다.
                checkout scm
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    // 제공된 Dockerfile을 이용해 멀티 스테이지 빌드를 수행합니다.
                    dockerImage = docker.build("${env.IMAGE_NAME}:${env.IMAGE_TAG}")
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    // 필요시, 컨테이너 내부에서 테스트를 실행합니다.
                    // Dockerfile 내 npm test 명령이 주석처리 되어 있으므로, 
                    // 테스트가 필요하면 해당 부분을 활성화하세요.
                    dockerImage.inside {
                        sh 'npm test'
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    // EC2 또는 원하는 환경에 컨테이너를 실행합니다.
                    // 여기서는 예시로 로컬에서 포트 80으로 실행합니다.
                    sh "docker run -d -p 80:80 ${env.IMAGE_NAME}:${env.IMAGE_TAG}"
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline 실행 완료.'
        }
    }
}
